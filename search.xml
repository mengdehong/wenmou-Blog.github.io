<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2022/12/25/Git/"/>
      <url>/2022/12/25/Git/</url>
      
        <content type="html"><![CDATA[<h2 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h2><p>[toc]</p><img src="https://s2.loli.net/2022/12/25/dth4CTXA62m5uHZ.png" alt="git" style="zoom: 50%;" /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本流程</span></span><br><span class="line"><span class="comment">#切换到任意文件夹,打开git bash或者cmd</span></span><br><span class="line"><span class="comment">#创建本地仓库#或者直接 git clone https</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment">#仓库状态</span></span><br><span class="line">git status</span><br><span class="line">  </span><br><span class="line"><span class="comment">#创建远程库别名</span></span><br><span class="line">git remote origin https://github.com//mengdehong//reponame</span><br><span class="line">  </span><br><span class="line"><span class="comment">#拉取远程库</span></span><br><span class="line">git pull origin master</span><br><span class="line">  </span><br><span class="line"><span class="comment">#创建并切换分支</span></span><br><span class="line">git checkout -b <span class="built_in">test</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#编写代码</span></span><br><span class="line"><span class="comment">#版本状态显示</span></span><br><span class="line">git reflog</span><br><span class="line"><span class="comment">#版本切换</span></span><br><span class="line">git reset --hard commitID</span><br><span class="line">  </span><br><span class="line"><span class="comment">#添加到暂存区</span></span><br><span class="line">git add [filename <span class="built_in">dir</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#将暂存区提交到本地库</span></span><br><span class="line">git commit -m<span class="string">&#x27;one commit&#x27;</span> [filename <span class="built_in">dir</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#推送本地的master分支到远程origin</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="1、初始操作"><a href="#1、初始操作" class="headerlink" title="1、初始操作"></a>1、初始操作</h3><h4 id="1-1-查看配置信息"><a href="#1-1-查看配置信息" class="headerlink" title="1.1 查看配置信息"></a>1.1 查看配置信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br><span class="line">git config --global user.name <span class="string">&quot;要修改的名字&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;要添加的邮箱&quot;</span></span><br></pre></td></tr></table></figure><pre><code>在用户文件夹内（C:\Users\username）.gitconfig文件</code></pre><h4 id="1-2-常用命令起别名"><a href="#1-2-常用命令起别名" class="headerlink" title="1.2 常用命令起别名"></a>1.2 常用命令起别名</h4><ol><li>打开用户目录，创建 .bashrc 文件</li><li>在 .bashrc 文件中输入内容</li></ol><h4 id="1-3-本地仓库"><a href="#1-3-本地仓库" class="headerlink" title="1.3 本地仓库"></a>1.3 本地仓库</h4><pre><code>1）在电脑的任意位置创建一个空目录作为我们的本地Git仓库2）进入这个目录中，点击右键打开Git bash窗口    3）执行命令***git init***    4）如果创建成功后可在文件夹下看到隐藏的.git目录。</code></pre><h3 id="2、基本操作"><a href="#2、基本操作" class="headerlink" title="2、基本操作"></a>2、基本操作</h3><pre><code>*此次演示过程，仓库内仅有一个hello文件*</code></pre><p><strong>git可以使用Linux命令</strong></p><h4 id="2-1-查看修改的状态"><a href="#2-1-查看修改的状态" class="headerlink" title="2.1 查看修改的状态"></a>2.1 查看修改的状态</h4><pre><code>**git status**</code></pre><h4 id="2-2-添加工作区到暂存区"><a href="#2-2-添加工作区到暂存区" class="headerlink" title="2.2 添加工作区到暂存区"></a>2.2 添加工作区到暂存区</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add filename</span><br></pre></td></tr></table></figure><pre><code>add 后加文件名或者文件夹名当修改文件后，没有add ，调用status命令，显示</code></pre><p><img src="https://s2.loli.net/2022/12/25/LiKVQXtYvslrHMC.png" alt="20221225_011229_780"></p><pre><code>add后，调用status命令，显示</code></pre><p><img src="https://s2.loli.net/2022/12/25/h5gQ38cxGTBYdH7.png" alt="20221225_011252_446"></p><h4 id="2-3-提交暂存区到本地仓库"><a href="#2-3-提交暂存区到本地仓库" class="headerlink" title="2.3 提交暂存区到本地仓库"></a>2.3 提交暂存区到本地仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;注释&quot;</span> [filename]</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/12/25/SLm6XQWDBUiqoet.png" alt="20221225_011236_246"></p><p>上面的51887d0这串字符即为此次日志号</p><p>第二次commit</p><img src="https://s2.loli.net/2022/12/25/jYM5qJlgyGmFedA.png" alt="20221225_011257_979" style="zoom: 67%;" /><p>又生成了一个日志号，并显示几个文件更改了，以行为单位显示文件的修改量</p><h4 id="2-4-查看提交日志"><a href="#2-4-查看提交日志" class="headerlink" title="2.4 查看提交日志"></a>2.4 查看提交日志</h4><pre><code>**git reflog      git log**git log 查询日志、获取提交者ID</code></pre><img src="https://s2.loli.net/2022/12/25/g45yz9c8loeEQYB.png" alt="20221225_011211_732" style="zoom:67%;" /><pre><code>git reflog</code></pre><img src="https://s2.loli.net/2022/12/25/cgOWMHxQLudvBUS.png" alt="20221225_011206_362" style="zoom:80%;" /><h4 id="2-5-版本切换"><a href="#2-5-版本切换" class="headerlink" title="2.5 版本切换"></a>2.5 版本切换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard commitID</span><br></pre></td></tr></table></figure><ol><li><p>先使用git reflog 查看历史版本</p><p>上面图片中 d70d479和51887d0 为commitID</p></li><li><p>然后按照命令形式进行版本切换</p></li></ol><p><img src="https://s2.loli.net/2022/12/25/GKcBy1j2fiplZ5U.png" alt="image-20221225012810922"></p><pre><code>可以再次进行git log查看日志信息</code></pre><p><img src="https://s2.loli.net/2022/12/25/QkuJpOLxXDe3CEN.png" alt="image-20221225013130666"></p><pre><code>显示当前已成功切换</code></pre><h3 id="3、分支"><a href="#3、分支" class="headerlink" title="3、分支"></a>3、分支</h3><h4 id="3-1-查看分支"><a href="#3-1-查看分支" class="headerlink" title="3.1 查看分支"></a>3.1 查看分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch [-v]</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/12/25/dJAEe48n2XMuFIl.png" alt="image-20221225015107701" style="zoom:67%;" /><h4 id="3-2创建分支"><a href="#3-2创建分支" class="headerlink" title="3.2创建分支"></a>3.2创建分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/12/25/yCmNDGZ8XavTeIi.png" alt="image-20221225015128235" style="zoom:67%;" /><img src="https://s2.loli.net/2022/12/25/3pP64aOhESiLdvu.png" alt="image-20221225015140493" style="zoom:67%;" /><h4 id="3-3切换分支"><a href="#3-3切换分支" class="headerlink" title="3.3切换分支"></a>3.3切换分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [-b] [branch]</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/12/25/in7mqJ9W2kN3lyB.png" alt="image-20221225015822168"></p><h4 id="3-4-合并分支"><a href="#3-4-合并分支" class="headerlink" title="3.4 合并分支"></a>3.4 合并分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge [branch]<span class="comment">#将分支合并到主分支去</span></span><br></pre></td></tr></table></figure><pre><code>先切换到目标分支 git checkout test`&lt;img src=&quot;https://s2.loli.net/2022/12/25/YzwqBHNgrapmxDV.png&quot; alt=&quot;image-20221225020115865&quot; style=&quot;zoom:50%;&quot; /&gt;`**处理冲突**</code></pre><ol><li>处理文件中冲突的地方（比如在master上切换到冲突文件位置，直接修改冲突后的文件）</li><li>将解决完冲突的文件加入暂存区(add)</li><li>提交到仓库(commit）</li></ol><h4 id="3-5-删除分支"><a href="#3-5-删除分支" class="headerlink" title="3.5 删除分支"></a>3.5 删除分支</h4><p>不能删除当前分支，只能删除其他分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d b1 <span class="comment">#删除分支时，需要做各种检查</span></span><br><span class="line">git branch -D b1 <span class="comment">#不做任何检查，强制删除</span></span><br></pre></td></tr></table></figure><h3 id="4、Github"><a href="#4、Github" class="headerlink" title="4、Github"></a>4、Github</h3><h4 id="4-1-创建Github仓库"><a href="#4-1-创建Github仓库" class="headerlink" title="4.1 创建Github仓库"></a>4.1 创建Github仓库</h4><p><img src="https://s2.loli.net/2022/12/25/Xc6tUK7kwQYO51d.png" alt="image-20221225032351249"></p><h4 id="4-2-创建远程库别名"><a href="#4-2-创建远程库别名" class="headerlink" title="4.2 创建远程库别名"></a>4.2 创建远程库别名</h4><p>由于链接远程库依靠http&#x2F;ssh，链接名太长，创建个别名方便push等操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add [reponame] https://github.com//mengdehong//reponame</span><br><span class="line">git remote -v 查看别名</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/12/25/4yGeF8WldJVuQUk.png" alt="image-20221225014236007"></p><p><img src="https://s2.loli.net/2022/12/25/1TrEQKpatgfFvby.png" alt="image-20221225014203683"></p><h4 id="4-3推送本地库到远程库"><a href="#4-3推送本地库到远程库" class="headerlink" title="4.3推送本地库到远程库"></a>4.3推送本地库到远程库</h4><p>推送分支与数据到某个远端仓库命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [<span class="built_in">alias</span>] [branch]</span><br></pre></td></tr></table></figure><h4 id="4-4拉取远程库"><a href="#4-4拉取远程库" class="headerlink" title="4.4拉取远程库"></a>4.4拉取远程库</h4><p>git pull 命令用于从远程获取代码并合并本地的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull [alias] [branch]</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/12/25/UGdaCPZzjpQ68iF.png" alt="image-20221225021634960" style="zoom:50%;" /><h4 id="4-5克隆远程库"><a href="#4-5克隆远程库" class="headerlink" title="4.5克隆远程库"></a>4.5克隆远程库</h4><p>切换到一个文件夹内打开git bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com//mengdehong//reponame</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/12/25/utASkzgXvZalFY6.png" alt="image-20221225022206191" style="zoom:50%;" /><p>克隆完成后，会在该文件夹内初始化本地仓库，并创建别名(origin)</p><img src="https://s2.loli.net/2022/12/25/DCkhgbty7VlK18I.png" alt="image-20221225022254638" style="zoom:50%;" /><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/12/21/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/21/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇文章"><a href="#这是第一篇文章" class="headerlink" title="这是第一篇文章"></a>这是第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
